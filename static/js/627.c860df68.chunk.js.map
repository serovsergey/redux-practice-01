{"version":3,"file":"static/js/627.c860df68.chunk.js","mappings":"2PAEaA,EAAW,mCAAG,8FACZC,IAAAA,IAAA,4EADY,mFAAH,qD,6BCwDxB,EAjDqB,WACnB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,IAAV,IACxBG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,sGAElBP,GAAa,GAFK,SAGKN,IAHL,iBAGVc,EAHU,EAGVA,MACCC,QACPX,EAAYU,GALI,yEAUlBR,GAAa,GAVK,4EAAH,qDAanBO,GACD,GAAE,IAUH,GAAIR,EACF,OAAO,sCAET,IAAMW,EAAWb,EAASc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAC5B,2BACE,uBAAIA,KACJ,mBAAQC,KAAK,SAASC,QAAS,kBAdhBC,EAcgC,CAAEJ,GAAAA,EAAIC,KAAAA,QAbnDZ,EAAKgB,MAAK,qBAAGL,KAAgBI,EAAKJ,EAAxB,IACZM,MAAM,qBAAD,OAAsBF,EAAKH,OAGlCT,EAAS,CAAEU,KAAMK,EAAAA,EAAaC,QAASJ,KALvB,IAACA,CAcgB,EAA/B,mBAFOJ,EADmB,IAO9B,OAEE,wBACGF,GAGN,C","sources":["services/productsApi.js","pages/ProductsPage/ProductsPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport const getProducts = async () => {\n  return await axios.get(`https://62becfba0bc9b125615fd0f7.mockapi.io/api/products?page=1&limit=10`);\n}\n","import React from 'react';\n\n// import s from './productsPage.module.scss';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { getProducts } from 'services/productsApi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART } from 'redux/cart/cart.constants';\n\nconst ProductsPage = () => {\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const cart = useSelector(store => store.cart);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await getProducts();\n        if (data.length) {\n          setProducts(data);\n        }\n      } catch (error) {\n\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchProducts();\n  }, [])\n\n  const handleBuy = (item) => {\n    if (cart.some(({ id }) => id === item.id)) {\n      alert(`Duplicate product ${item.name}`);\n      return;\n    }\n    dispatch({ type: ADD_TO_CART, payload: item })\n  }\n\n  if (isLoading) {\n    return <p>Loading...</p>\n  }\n  const elements = products.map(({ id, name }) => (\n    <li key={id}>\n      <p>{name}</p>\n      <button type='button' onClick={() => handleBuy({ id, name })}>Buy</button>\n    </li>\n  ))\n\n  return (\n\n    <ul>\n      {elements}\n    </ul>\n  )\n};\n\nexport default ProductsPage;\n"],"names":["getProducts","axios","useState","products","setProducts","isLoading","setIsLoading","cart","useSelector","store","dispatch","useDispatch","useEffect","fetchProducts","data","length","elements","map","id","name","type","onClick","item","some","alert","ADD_TO_CART","payload"],"sourceRoot":""}